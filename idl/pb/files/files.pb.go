// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: files.proto

package files

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type FileModel struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @inject_tag: json:"file_id"
	FileID uint64 `protobuf:"varint,1,opt,name=FileID,proto3" json:"file_id"`
	// @inject_tag: json:"user_id"
	UserID uint64 `protobuf:"varint,2,opt,name=UserID,proto3" json:"user_id"`
	// @inject_tag: json:"file_name"
	FileName string `protobuf:"bytes,3,opt,name=FileName,proto3" json:"file_name"`
	// @inject_tag: json:"file_size"
	FileSize int64 `protobuf:"varint,4,opt,name=FileSize,proto3" json:"file_size"`
	// @inject_tag: json:"bucket"
	Bucket string `protobuf:"bytes,5,opt,name=Bucket,proto3" json:"bucket"` // 存储桶名称（如 MinIO 的 bucket）
	// @inject_tag: json:"object_name"
	ObjectName    string `protobuf:"bytes,6,opt,name=ObjectName,proto3" json:"object_name"` // 存储对象名（唯一标识）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileModel) Reset() {
	*x = FileModel{}
	mi := &file_files_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileModel) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileModel) ProtoMessage() {}

func (x *FileModel) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileModel.ProtoReflect.Descriptor instead.
func (*FileModel) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{0}
}

func (x *FileModel) GetFileID() uint64 {
	if x != nil {
		return x.FileID
	}
	return 0
}

func (x *FileModel) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *FileModel) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *FileModel) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *FileModel) GetBucket() string {
	if x != nil {
		return x.Bucket
	}
	return ""
}

func (x *FileModel) GetObjectName() string {
	if x != nil {
		return x.ObjectName
	}
	return ""
}

// 文件上传（表单上传）
type FileUploadRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @inject_tag: json:"user_id" form:"user_id"
	UserID uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"user_id" form:"user_id"`
	// @inject_tag: json:"file_name" form:"file_name"
	Filename string `protobuf:"bytes,2,opt,name=Filename,proto3" json:"file_name" form:"file_name"`
	// @inject_tag: json:"file_size"
	FileSize int64 `protobuf:"varint,3,opt,name=FileSize,proto3" json:"file_size"`
	// @inject_tag: json:"object_name"
	ObjectName    string `protobuf:"bytes,4,opt,name=ObjectName,proto3" json:"object_name"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileUploadRequest) Reset() {
	*x = FileUploadRequest{}
	mi := &file_files_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadRequest) ProtoMessage() {}

func (x *FileUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadRequest.ProtoReflect.Descriptor instead.
func (*FileUploadRequest) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{1}
}

func (x *FileUploadRequest) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *FileUploadRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileUploadRequest) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *FileUploadRequest) GetObjectName() string {
	if x != nil {
		return x.ObjectName
	}
	return ""
}

type FileUploadResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @inject_tag: json:"code" form:"code"
	Code int64 `protobuf:"varint,1,opt,name=Code,proto3" json:"code" form:"code"`
	// @inject_tag: json:"msg" form:"msg"
	Msg string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"msg" form:"msg"`
	// @inject_tag: json:"object_url"
	ObjectUrl string `protobuf:"bytes,3,opt,name=ObjectUrl,proto3" json:"object_url"`
	// @inject_tag: json:"file_id" form:"file_id"
	FileID        uint64 `protobuf:"varint,4,opt,name=FileID,proto3" json:"file_id" form:"file_id"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileUploadResponse) Reset() {
	*x = FileUploadResponse{}
	mi := &file_files_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileUploadResponse) ProtoMessage() {}

func (x *FileUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileUploadResponse.ProtoReflect.Descriptor instead.
func (*FileUploadResponse) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{2}
}

func (x *FileUploadResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *FileUploadResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *FileUploadResponse) GetObjectUrl() string {
	if x != nil {
		return x.ObjectUrl
	}
	return ""
}

func (x *FileUploadResponse) GetFileID() uint64 {
	if x != nil {
		return x.FileID
	}
	return 0
}

// 文件上传（二进制上传）
type BigFileUploadRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @inject_tag: json:"user_id" form:"user_id"
	UserID uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"user_id" form:"user_id"`
	// @inject_tag: json:"file_name" form:"file_name"
	Filename string `protobuf:"bytes,2,opt,name=Filename,proto3" json:"file_name" form:"file_name"` // 文件名，仅首个分片携带
	// @inject_tag: json:"file_size"
	FileSize int64 `protobuf:"varint,3,opt,name=FileSize,proto3" json:"file_size"`
	// @inject_tag: json:"object_name"
	ObjectName string `protobuf:"bytes,4,opt,name=ObjectName,proto3" json:"object_name"`
	// @inject_tag: json:"content" form:"content"
	Content []byte `protobuf:"bytes,5,opt,name=Content,proto3" json:"content" form:"content"` // 当前分片的数据
	// @inject_tag: json:"is_last" form:"is_last"
	IsLast        bool `protobuf:"varint,6,opt,name=IsLast,proto3" json:"is_last" form:"is_last"` // 是否为最后一个分片
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BigFileUploadRequest) Reset() {
	*x = BigFileUploadRequest{}
	mi := &file_files_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BigFileUploadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BigFileUploadRequest) ProtoMessage() {}

func (x *BigFileUploadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BigFileUploadRequest.ProtoReflect.Descriptor instead.
func (*BigFileUploadRequest) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{3}
}

func (x *BigFileUploadRequest) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *BigFileUploadRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *BigFileUploadRequest) GetFileSize() int64 {
	if x != nil {
		return x.FileSize
	}
	return 0
}

func (x *BigFileUploadRequest) GetObjectName() string {
	if x != nil {
		return x.ObjectName
	}
	return ""
}

func (x *BigFileUploadRequest) GetContent() []byte {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *BigFileUploadRequest) GetIsLast() bool {
	if x != nil {
		return x.IsLast
	}
	return false
}

type BigFileUploadResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @inject_tag: json:"code" form:"code"
	Code int64 `protobuf:"varint,1,opt,name=Code,proto3" json:"code" form:"code"`
	// @inject_tag: json:"msg" form:"msg"
	Msg string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"msg" form:"msg"`
	// @inject_tag: json:"object_url"
	ObjectUrl string `protobuf:"bytes,3,opt,name=ObjectUrl,proto3" json:"object_url"`
	// @inject_tag: json:"file_id" form:"file_id"
	FileID        uint64 `protobuf:"varint,4,opt,name=FileID,proto3" json:"file_id" form:"file_id"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BigFileUploadResponse) Reset() {
	*x = BigFileUploadResponse{}
	mi := &file_files_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BigFileUploadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BigFileUploadResponse) ProtoMessage() {}

func (x *BigFileUploadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BigFileUploadResponse.ProtoReflect.Descriptor instead.
func (*BigFileUploadResponse) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{4}
}

func (x *BigFileUploadResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *BigFileUploadResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *BigFileUploadResponse) GetObjectUrl() string {
	if x != nil {
		return x.ObjectUrl
	}
	return ""
}

func (x *BigFileUploadResponse) GetFileID() uint64 {
	if x != nil {
		return x.FileID
	}
	return 0
}

// 文件删除
type FileDeleteRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @inject_tag: json:"file_id" form:"file_id"
	FileID uint64 `protobuf:"varint,1,opt,name=FileID,proto3" json:"file_id" form:"file_id"`
	// @inject_tag: json:"user_id" form:"user_id"
	UserID        uint64 `protobuf:"varint,2,opt,name=UserID,proto3" json:"user_id" form:"user_id"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileDeleteRequest) Reset() {
	*x = FileDeleteRequest{}
	mi := &file_files_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileDeleteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDeleteRequest) ProtoMessage() {}

func (x *FileDeleteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDeleteRequest.ProtoReflect.Descriptor instead.
func (*FileDeleteRequest) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{5}
}

func (x *FileDeleteRequest) GetFileID() uint64 {
	if x != nil {
		return x.FileID
	}
	return 0
}

func (x *FileDeleteRequest) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

// 文件列表请求与响应
type FileListRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @inject_tag: json:"user_id" form:"user_id"
	UserID uint64 `protobuf:"varint,1,opt,name=UserID,proto3" json:"user_id" form:"user_id"`
	// @inject_tag: json:"page" form:"page"
	Page int32 `protobuf:"varint,2,opt,name=Page,proto3" json:"page" form:"page"`
	// @inject_tag: json:"page_size" form:"page_size"
	PageSize      int32 `protobuf:"varint,3,opt,name=PageSize,proto3" json:"page_size" form:"page_size"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileListRequest) Reset() {
	*x = FileListRequest{}
	mi := &file_files_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileListRequest) ProtoMessage() {}

func (x *FileListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileListRequest.ProtoReflect.Descriptor instead.
func (*FileListRequest) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{6}
}

func (x *FileListRequest) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *FileListRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *FileListRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type FileListResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @inject_tag: json:"code"
	Code int32 `protobuf:"varint,1,opt,name=Code,proto3" json:"code"`
	// @inject_tag: json:"msg"
	Msg string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"msg"`
	// @inject_tag: json:"files"
	Files []*FileModel `protobuf:"bytes,3,rep,name=Files,proto3" json:"files"`
	// @inject_tag: json:"total"
	Total         int64 `protobuf:"varint,4,opt,name=Total,proto3" json:"total"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileListResponse) Reset() {
	*x = FileListResponse{}
	mi := &file_files_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileListResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileListResponse) ProtoMessage() {}

func (x *FileListResponse) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileListResponse.ProtoReflect.Descriptor instead.
func (*FileListResponse) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{7}
}

func (x *FileListResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *FileListResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *FileListResponse) GetFiles() []*FileModel {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *FileListResponse) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

// 下载请求与响应（返回预签名URL或本地路径）
type FileDownloadRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @inject_tag: json:"file_id" form:"file_id"
	FileID uint64 `protobuf:"varint,1,opt,name=FileID,proto3" json:"file_id" form:"file_id"`
	// @inject_tag: json:"file_name" form:"file_name"
	Filename string `protobuf:"bytes,2,opt,name=Filename,proto3" json:"file_name" form:"file_name"`
	// @inject_tag: json:"user_id" form:"user_id"
	UserID        uint64 `protobuf:"varint,3,opt,name=UserID,proto3" json:"user_id" form:"user_id"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileDownloadRequest) Reset() {
	*x = FileDownloadRequest{}
	mi := &file_files_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileDownloadRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDownloadRequest) ProtoMessage() {}

func (x *FileDownloadRequest) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDownloadRequest.ProtoReflect.Descriptor instead.
func (*FileDownloadRequest) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{8}
}

func (x *FileDownloadRequest) GetFileID() uint64 {
	if x != nil {
		return x.FileID
	}
	return 0
}

func (x *FileDownloadRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *FileDownloadRequest) GetUserID() uint64 {
	if x != nil {
		return x.UserID
	}
	return 0
}

type FileDownloadResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @inject_tag: json:"code"
	Code int32 `protobuf:"varint,1,opt,name=Code,proto3" json:"code"`
	// @inject_tag: json:"msg"
	Msg string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"msg"`
	// @inject_tag: json:"download_url"
	DownloadUrl string `protobuf:"bytes,3,opt,name=DownloadUrl,proto3" json:"download_url"`
	// @inject_tag: json:"file_name" form:"file_name"
	Filename      string `protobuf:"bytes,4,opt,name=Filename,proto3" json:"file_name" form:"file_name"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileDownloadResponse) Reset() {
	*x = FileDownloadResponse{}
	mi := &file_files_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileDownloadResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileDownloadResponse) ProtoMessage() {}

func (x *FileDownloadResponse) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileDownloadResponse.ProtoReflect.Descriptor instead.
func (*FileDownloadResponse) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{9}
}

func (x *FileDownloadResponse) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *FileDownloadResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *FileDownloadResponse) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

func (x *FileDownloadResponse) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type FileCommonResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// @inject_tag: json:"code" form:"code"
	Code int64 `protobuf:"varint,1,opt,name=Code,proto3" json:"code" form:"code"`
	// @inject_tag: json:"msg" form:"msg"
	Msg           string `protobuf:"bytes,2,opt,name=Msg,proto3" json:"msg" form:"msg"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FileCommonResponse) Reset() {
	*x = FileCommonResponse{}
	mi := &file_files_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FileCommonResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileCommonResponse) ProtoMessage() {}

func (x *FileCommonResponse) ProtoReflect() protoreflect.Message {
	mi := &file_files_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileCommonResponse.ProtoReflect.Descriptor instead.
func (*FileCommonResponse) Descriptor() ([]byte, []int) {
	return file_files_proto_rawDescGZIP(), []int{10}
}

func (x *FileCommonResponse) GetCode() int64 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *FileCommonResponse) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_files_proto protoreflect.FileDescriptor

const file_files_proto_rawDesc = "" +
	"\n" +
	"\vfiles.proto\"\xab\x01\n" +
	"\tFileModel\x12\x16\n" +
	"\x06FileID\x18\x01 \x01(\x04R\x06FileID\x12\x16\n" +
	"\x06UserID\x18\x02 \x01(\x04R\x06UserID\x12\x1a\n" +
	"\bFileName\x18\x03 \x01(\tR\bFileName\x12\x1a\n" +
	"\bFileSize\x18\x04 \x01(\x03R\bFileSize\x12\x16\n" +
	"\x06Bucket\x18\x05 \x01(\tR\x06Bucket\x12\x1e\n" +
	"\n" +
	"ObjectName\x18\x06 \x01(\tR\n" +
	"ObjectName\"\x83\x01\n" +
	"\x11FileUploadRequest\x12\x16\n" +
	"\x06UserID\x18\x01 \x01(\x04R\x06UserID\x12\x1a\n" +
	"\bFilename\x18\x02 \x01(\tR\bFilename\x12\x1a\n" +
	"\bFileSize\x18\x03 \x01(\x03R\bFileSize\x12\x1e\n" +
	"\n" +
	"ObjectName\x18\x04 \x01(\tR\n" +
	"ObjectName\"p\n" +
	"\x12FileUploadResponse\x12\x12\n" +
	"\x04Code\x18\x01 \x01(\x03R\x04Code\x12\x10\n" +
	"\x03Msg\x18\x02 \x01(\tR\x03Msg\x12\x1c\n" +
	"\tObjectUrl\x18\x03 \x01(\tR\tObjectUrl\x12\x16\n" +
	"\x06FileID\x18\x04 \x01(\x04R\x06FileID\"\xb8\x01\n" +
	"\x14BigFileUploadRequest\x12\x16\n" +
	"\x06UserID\x18\x01 \x01(\x04R\x06UserID\x12\x1a\n" +
	"\bFilename\x18\x02 \x01(\tR\bFilename\x12\x1a\n" +
	"\bFileSize\x18\x03 \x01(\x03R\bFileSize\x12\x1e\n" +
	"\n" +
	"ObjectName\x18\x04 \x01(\tR\n" +
	"ObjectName\x12\x18\n" +
	"\aContent\x18\x05 \x01(\fR\aContent\x12\x16\n" +
	"\x06IsLast\x18\x06 \x01(\bR\x06IsLast\"s\n" +
	"\x15BigFileUploadResponse\x12\x12\n" +
	"\x04Code\x18\x01 \x01(\x03R\x04Code\x12\x10\n" +
	"\x03Msg\x18\x02 \x01(\tR\x03Msg\x12\x1c\n" +
	"\tObjectUrl\x18\x03 \x01(\tR\tObjectUrl\x12\x16\n" +
	"\x06FileID\x18\x04 \x01(\x04R\x06FileID\"C\n" +
	"\x11FileDeleteRequest\x12\x16\n" +
	"\x06FileID\x18\x01 \x01(\x04R\x06FileID\x12\x16\n" +
	"\x06UserID\x18\x02 \x01(\x04R\x06UserID\"Y\n" +
	"\x0fFileListRequest\x12\x16\n" +
	"\x06UserID\x18\x01 \x01(\x04R\x06UserID\x12\x12\n" +
	"\x04Page\x18\x02 \x01(\x05R\x04Page\x12\x1a\n" +
	"\bPageSize\x18\x03 \x01(\x05R\bPageSize\"p\n" +
	"\x10FileListResponse\x12\x12\n" +
	"\x04Code\x18\x01 \x01(\x05R\x04Code\x12\x10\n" +
	"\x03Msg\x18\x02 \x01(\tR\x03Msg\x12 \n" +
	"\x05Files\x18\x03 \x03(\v2\n" +
	".FileModelR\x05Files\x12\x14\n" +
	"\x05Total\x18\x04 \x01(\x03R\x05Total\"a\n" +
	"\x13FileDownloadRequest\x12\x16\n" +
	"\x06FileID\x18\x01 \x01(\x04R\x06FileID\x12\x1a\n" +
	"\bFilename\x18\x02 \x01(\tR\bFilename\x12\x16\n" +
	"\x06UserID\x18\x03 \x01(\x04R\x06UserID\"z\n" +
	"\x14FileDownloadResponse\x12\x12\n" +
	"\x04Code\x18\x01 \x01(\x05R\x04Code\x12\x10\n" +
	"\x03Msg\x18\x02 \x01(\tR\x03Msg\x12 \n" +
	"\vDownloadUrl\x18\x03 \x01(\tR\vDownloadUrl\x12\x1a\n" +
	"\bFilename\x18\x04 \x01(\tR\bFilename\":\n" +
	"\x12FileCommonResponse\x12\x12\n" +
	"\x04Code\x18\x01 \x01(\x03R\x04Code\x12\x10\n" +
	"\x03Msg\x18\x02 \x01(\tR\x03Msg2\xac\x02\n" +
	"\fFilesService\x125\n" +
	"\n" +
	"FileUpload\x12\x12.FileUploadRequest\x1a\x13.FileUploadResponse\x12@\n" +
	"\rBigFileUpload\x12\x15.BigFileUploadRequest\x1a\x16.BigFileUploadResponse(\x01\x125\n" +
	"\n" +
	"FileDelete\x12\x12.FileDeleteRequest\x1a\x13.FileCommonResponse\x12/\n" +
	"\bFileList\x12\x10.FileListRequest\x1a\x11.FileListResponse\x12;\n" +
	"\fFileDownload\x12\x14.FileDownloadRequest\x1a\x15.FileDownloadResponseB\bZ\x06files/b\x06proto3"

var (
	file_files_proto_rawDescOnce sync.Once
	file_files_proto_rawDescData []byte
)

func file_files_proto_rawDescGZIP() []byte {
	file_files_proto_rawDescOnce.Do(func() {
		file_files_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_files_proto_rawDesc), len(file_files_proto_rawDesc)))
	})
	return file_files_proto_rawDescData
}

var file_files_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_files_proto_goTypes = []any{
	(*FileModel)(nil),             // 0: FileModel
	(*FileUploadRequest)(nil),     // 1: FileUploadRequest
	(*FileUploadResponse)(nil),    // 2: FileUploadResponse
	(*BigFileUploadRequest)(nil),  // 3: BigFileUploadRequest
	(*BigFileUploadResponse)(nil), // 4: BigFileUploadResponse
	(*FileDeleteRequest)(nil),     // 5: FileDeleteRequest
	(*FileListRequest)(nil),       // 6: FileListRequest
	(*FileListResponse)(nil),      // 7: FileListResponse
	(*FileDownloadRequest)(nil),   // 8: FileDownloadRequest
	(*FileDownloadResponse)(nil),  // 9: FileDownloadResponse
	(*FileCommonResponse)(nil),    // 10: FileCommonResponse
}
var file_files_proto_depIdxs = []int32{
	0,  // 0: FileListResponse.Files:type_name -> FileModel
	1,  // 1: FilesService.FileUpload:input_type -> FileUploadRequest
	3,  // 2: FilesService.BigFileUpload:input_type -> BigFileUploadRequest
	5,  // 3: FilesService.FileDelete:input_type -> FileDeleteRequest
	6,  // 4: FilesService.FileList:input_type -> FileListRequest
	8,  // 5: FilesService.FileDownload:input_type -> FileDownloadRequest
	2,  // 6: FilesService.FileUpload:output_type -> FileUploadResponse
	4,  // 7: FilesService.BigFileUpload:output_type -> BigFileUploadResponse
	10, // 8: FilesService.FileDelete:output_type -> FileCommonResponse
	7,  // 9: FilesService.FileList:output_type -> FileListResponse
	9,  // 10: FilesService.FileDownload:output_type -> FileDownloadResponse
	6,  // [6:11] is the sub-list for method output_type
	1,  // [1:6] is the sub-list for method input_type
	1,  // [1:1] is the sub-list for extension type_name
	1,  // [1:1] is the sub-list for extension extendee
	0,  // [0:1] is the sub-list for field type_name
}

func init() { file_files_proto_init() }
func file_files_proto_init() {
	if File_files_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_files_proto_rawDesc), len(file_files_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_files_proto_goTypes,
		DependencyIndexes: file_files_proto_depIdxs,
		MessageInfos:      file_files_proto_msgTypes,
	}.Build()
	File_files_proto = out.File
	file_files_proto_goTypes = nil
	file_files_proto_depIdxs = nil
}
